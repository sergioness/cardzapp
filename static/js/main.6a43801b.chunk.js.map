{"version":3,"sources":["serviceWorker.js","components/header/Header.js","components/card/Card.js","components/list/List.js","components/searchbox/Searchbox.js","components/scrollable/Scrollable.js","components/errorboundry/ErrorBoundry.js","actions.js","components/content/Content.js","components/app/App.js","reducers.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Header","className","this","props","text","React","PureComponent","Card","info","id","name","email","alt","src","List","values","Fragment","map","value","key","Searchbox","htmlFor","style","color","type","placeholder","onChange","onSearch","Scrollable","children","ErrorBoundry","hasError","setState","Component","REQUEST_DATA","Content","filter","list","valueLowerCase","toLowerCase","listElement","includes","onRequestData","searchField","onSearchChange","data","isPending","filteredDataList","connect","searchCard","requestData","dispatch","event","action","payload","target","fetch","response","json","App","title","initialStateÐ†Search","initialStateData","rootReducer","createLogger","combineReducers","reducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6a43801b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default class Header extends React.PureComponent {\r\n  render() {\r\n    return (<h1 className='f1'>{this.props.text}</h1>);\r\n  }\r\n}","import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    const {id, name, email} = props.info;\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt={`${name} thumbnail`} src={`https://robohash.org/${id}`}/>\r\n            <h2>{name}</h2>\r\n            <div>{email}</div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from '../card/Card';\r\n\r\nconst List = (props) => {\r\n    const values = props.values;\r\n    return (\r\n        <React.Fragment>\r\n        {\r\n            values.map((value) => {\r\n                return (<Card key={value.id} info={value}/>);\r\n            })\r\n        }\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default List;","import React from 'react';\r\n\r\nconst Searchbox = (props) => {\r\n    return (\r\n        <div className='ma2'>\r\n            <label htmlFor='searchbox' className=\"f4 b pa2\" style={{color:'#4cb0af'}}>Search for</label>\r\n            <input type='search'\r\n                   id='searchbox'\r\n                   placeholder='ex. Leanne Graham'\r\n                   className='pa2 ba b--green bg-lightest-blue'\r\n                   onChange={props.onSearch}></input>\r\n        </div>\r\n    );\r\n};\r\nexport default Searchbox;","import React from 'react';\r\nimport './Scrollable.css';\r\n\r\nconst Scrollable = (props) => {\r\n    return (\r\n        <div className='scrollable'>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default Scrollable;","import React from \"react\";\r\n\r\nclass ErrorBoundry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\n        return this.state.hasError ?\r\n            (<h1>Oops! Something went wrong</h1>)\r\n            : this.props.children;\r\n    }\r\n}\r\nexport default ErrorBoundry;","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const setSearchField = (text) => {\r\n    return {\r\n        type: CHANGE_SEARCH_FIELD,\r\n        payload: text\r\n    };\r\n};\r\n\r\nexport const REQUEST_DATA = {\r\n    PENDING: 'REQUEST_DATA.PENDING',\r\n    SUCCESS: 'REQUEST_DATA.SUCCESS',\r\n    FAILED: 'REQUEST_DATA.FAILED'\r\n};\r\n\r\nexport const requestData = () => (dispatch) => {\r\n    dispatch({type: REQUEST_DATA.PENDING});\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(json => dispatch({type: REQUEST_DATA.SUCCESS, payload: json}))\r\n    .catch(error => dispatch({type: REQUEST_DATA.FAILED, payload: error}));\r\n};","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport List from '../list/List';\r\nimport Searchbox from '../searchbox/Searchbox';\r\nimport Scrollable from '../scrollable/Scrollable';\r\nimport ErrorBoundry from '../errorboundry/ErrorBoundry';\r\nimport { setSearchField, requestData } from '../../actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state.searchCard,\r\n        ...state.requestData\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSearchChange: (event) => {\r\n            const action = setSearchField(event.target.value);\r\n            return dispatch(action);\r\n        },\r\n        onRequestData: () => {\r\n            return dispatch(requestData());\r\n        }\r\n    };\r\n};\r\n\r\n\r\nclass Content extends React.Component {\r\n\r\n    filter = (list, value) => {\r\n        const valueLowerCase = value.toLowerCase();\r\n        return list.filter((listElement) => {\r\n            return listElement.name.toLowerCase().includes(valueLowerCase);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRequestData();\r\n    }\r\n\r\n    render() {\r\n        const { searchField, onSearchChange, data, isPending} = this.props;\r\n        const filteredDataList = this.filter(data, searchField);\r\n        return isPending ?\r\n            (<h4>Loading</h4>) :\r\n            (<ErrorBoundry className='tc'>\r\n                <Searchbox onSearch={onSearchChange}/>\r\n                <Scrollable>\r\n                    <List values={filteredDataList}/>\r\n                </Scrollable>\r\n            </ErrorBoundry>);\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Content);","import React from 'react';\r\nimport Header from '../header/Header';\r\nimport Content from '../content/Content';\r\n\r\nclass App extends React.PureComponent {\r\n    render() {\r\n        return <div className='tc'>\r\n            <Header text={this.props.title}/>\r\n            <Content />\r\n        </div>\r\n    }\r\n};\r\nexport default App;","import { CHANGE_SEARCH_FIELD, REQUEST_DATA } from \"./actions\";\r\n\r\nconst initialStateÐ†Search = {\r\n    searchField: ''\r\n}\r\nexport const searchCard = (state = initialStateÐ†Search,\r\n                           action = {}) => {\r\n    switch (action.type) {\r\n        case CHANGE_SEARCH_FIELD: {\r\n            return {\r\n                ...state,\r\n                searchField: action.payload\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nconst initialStateData = {\r\n    isPending: false,\r\n    data: [],\r\n    error: ''\r\n}\r\nexport const requestData = (state = initialStateData,\r\n                            action = {}) => {\r\n    switch (action.type) {\r\n        case REQUEST_DATA.PENDING: {\r\n            return { ...state, isPending: true}\r\n        }\r\n        case REQUEST_DATA.SUCCESS: {\r\n            return { ...state, isPending: false, data: action.payload}\r\n        }\r\n        case REQUEST_DATA.FAILED: {\r\n            return { ...state, isPending: false, error: action.payload}\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'tachyons';\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport App from './components/app/App'\r\nimport * as reducers from \"./reducers\";\r\n\r\nconst logger = createLogger();\r\nconst rootReducer = combineReducers(reducers);\r\nconst store = createStore(rootReducer, applyMiddleware(thunk/*, logger*/));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App title='Cardzapp'/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}